All videos H.264, 1,280 x 720
* 101 Ways to Improve Java - Why Developer Participation Matters
* A Common Development Framework - From JSP to GSP at CERN
* A Deep Dive into Java Performance Analysis with Advanced Toolsets
* Autosharding Enterprise to Social Gaming Applications with NoSQL and Couchbase
* Behavior-Driven Development on the JVM - A State of the Union
* Bringing Mylyn to NetBeans and OSGi Bridging Their Worlds
* Building Content-Rich Java Apps in the Cloud or On-Premises with the Alfresco API
* Building Native iPhone iPad Applications in Java CodeName One
* Building Portable Java EE 6 Applications in Eclipse
* Building Rich Client Applications with Eclipse 4
* Cloud ALM - Connecting the Development Team to the New Deployment Destination
* Code Inspection with the javac
* Concurrency Without Pain in Pure Java
* Concurrent Programming with the Disruptor
* Cover Your Web and Mobile Applications with Integration Tests from Scratch
* Cross-Build Injection Attacks - How Safe Is Your Java Build
* Custom Declarative Refactoring
* Custom Static Code Analysis
* Delivering Bug-Free More Efficient Code for the Java Platform
* Detecting Memory Leaks in Applications Spanning Multiple JVMs
* Developing Best Practices for Using Hudson CI
* Doing JSF Development in the NetBeans IDE
* Dynamic Class Reloading in the Wild with Javeleon
* Dynamic Instrumentation of Java Statically Defined Tracing
* Eclipse 4.x - A Major Upgrade of Eclipse
* Efficient Java Code and Project Organization
* First Do No Harm - Deferred Checked Exception Handling Promotes Reliability
* Gaining Market Advantage via Simplification and Differentiation with Java
* How My Life Would Have Been So Much Better If We Had Used the NetBeans Platform
* IDE 2.0 - How Much Can the IDE Predict You Will Write in the Next Few Seconds
* Improve Your Java Code Functional-Style Now
* Innovative Testing Techniques with Bytecode Instrumentation
* Introduction to the Play Framework
* JEDI - The Catalyst for Java Education
* Java Application Design Practices to Avoid When Dealing with Sub-100-Millisecond SLAs
* Java EE and Spring Framework Panel Discussion
* Kinect Open Source Programming Secrets - Hacking with OpenNI NITE and Java
* Large-Scale Automation with Jenkins
* Lessons Learned in Building Enterprise and Desktop Applications with the NetBeans IDE
* LinkedIn - A Social Network Built with Java Technologies and Agile Practices
* Linking the Java Application Lifecycle with Hudson
* Mixed-Language Development - Leveraging Native Code from Java
* Modern Software Development Antipatterns
* NetBeans.Next - The Roadmap Ahead
* NetBeans Platform Panel Discussion
* NetBeans Plug-in Development - JRebel Experience Report
* OSGi for the Earthings - Meet the Eclipse Libra
* Open Source Identity and Access Management Expert Panel
* Oracle JDeveloper and Oracle ADF - What's New
* Patterns for Modularity - What Modules Don t Want You to Know
* Pimp Your Productivity with Git Gerrit Hudson and Mylyn
* Project EASEL - Developing and Managing HTML5 in a Java World
* Protecting Machine-Only Processed Data
* Real-Life Load Testing - Up to Your Knees in Mud
* Real-World Strategies for Continuous Delivery with Maven and Jenkins
* Rediscovering Your Architecture Through Software Archaeology
* Resource Management in Java - Tips Traps and Techniques
* Right Ways to Climb the OpenJDK Source Tree
* Runtime Class Reloading for Dummies
* Server-Supported Large-Scale Development
* Software Modularity - Paradoxes Principles and Architectures
* Spearfish - Real-Time Java-Based Underwater Tracking of Large Numbers of Targets
* Strategies for Testing Event-Driven Programs
* Take Performance Tuning of Your Enterprise Java Applications to the Next Level
* Taming the Spaghetti - Rich Web Applications with Errai
* The Arquillian Universe - A Tour Around the Astrophysics Lab
* The Future of ALM - Developing in the Social Code Graph
* The Polyglot Java VM and Java Middleware
* The Power of Java 7 NIO.2
* The Social Developer
* Thermostat - An Open Source Instrumentation Tool for the HotSpot JVM
* Tooling Support for Enterprise Development
* Tools for Java EE 7 - Evolution or Revolution
* Uncovering Hidden Power Tools in the JDK
* Why There's No Future in Java Futures